/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.sms.view;

import com.ijse.sms.common.IDGeneretor;
import com.ijse.sms.controller.StudentPaymentsController;
import com.ijse.sms.controller.SubjectController;
import com.ijse.sms.controller.TeacherController;
import com.ijse.sms.controller.TeacherPaymentsController;
import com.ijse.sms.core.dto.StudentPaymentsDTO;
import com.ijse.sms.core.dto.SubjectDTO;
import com.ijse.sms.core.dto.TeacherDTO;
import com.ijse.sms.core.dto.TeacherPaymentDTO;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chamini
 */
public class TeacherPaymentForm extends javax.swing.JPanel {

    /**
     * Creates new form TeacherPaymentForm
     */
    String subid;
    String date1;
    String TeId;
    String name;
    public static StudentPaymentForm studentPayments;

    public TeacherPaymentForm(StudentPaymentForm studentPayments) {
        initComponents();
        this.studentPayments = studentPayments;
        txtTId.requestFocus();
        AutoGenarateID();
        setDate();
        getAllPayments();
        LoadSubjects();
        
        try {
            ArrayList<StudentPaymentsDTO> allPayments = StudentPaymentsController.getAllPayments();
            for (StudentPaymentsDTO allPayment : allPayments) {
                System.out.println("////// sljbdksd //"+allPayment.getDate());
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotalDay = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTId = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTePayment = new javax.swing.JTable();
        btnPrint = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtPayNomber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        cmbSubject = new javax.swing.JComboBox();
        txtNuPayment = new javax.swing.JTextField();
        dpDate = new org.jdesktop.swingx.JXDatePicker();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Date");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(290, 150, 60, 30);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("Teacher Name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(30, 190, 110, 30);

        txtDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });
        jPanel1.add(txtDate);
        txtDate.setBounds(360, 150, 130, 30);

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        jPanel1.add(txtName);
        txtName.setBounds(150, 190, 340, 30);

        jLabel8.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel8.setText("Full Amount For The Day");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(140, 350, 180, 30);

        txtTotalDay.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        txtTotalDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalDayActionPerformed(evt);
            }
        });
        jPanel1.add(txtTotalDay);
        txtTotalDay.setBounds(350, 350, 150, 30);

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel9.setText("Teacher Id");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(60, 150, 80, 30);

        txtTId.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtTId);
        txtTId.setBounds(150, 150, 130, 30);

        tblTePayment.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        tblTePayment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Teacher Id", "Teacher Name", "No.Of.Payment", "Full DayPayment", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTePayment);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(560, 100, 540, 390);

        btnPrint.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnPrint.setText("Print");
        btnPrint.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(btnPrint);
        btnPrint.setBounds(1020, 505, 90, 30);

        btnDelete.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDelete);
        btnDelete.setBounds(450, 515, 90, 30);

        btnUpdate.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(btnUpdate);
        btnUpdate.setBounds(350, 515, 90, 30);

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);
        btnAdd.setBounds(240, 515, 90, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel7.setText("Payment No");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(40, 230, 90, 30);

        txtPayNomber.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtPayNomber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPayNomberActionPerformed(evt);
            }
        });
        jPanel1.add(txtPayNomber);
        txtPayNomber.setBounds(150, 230, 130, 30);

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel10.setText("SubjectName");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(40, 110, 100, 30);

        cmbSubject.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubjectItemStateChanged(evt);
            }
        });
        cmbSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubjectActionPerformed(evt);
            }
        });
        jPanel1.add(cmbSubject);
        cmbSubject.setBounds(150, 110, 260, 30);

        txtNuPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNuPaymentActionPerformed(evt);
            }
        });
        jPanel1.add(txtNuPayment);
        txtNuPayment.setBounds(420, 110, 70, 30);

        dpDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dpDateActionPerformed(evt);
            }
        });
        jPanel1.add(dpDate);
        dpDate.setBounds(348, 70, 140, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel2.setText("Select Date");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(250, 70, 80, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1130, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1131, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 631, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtDateActionPerformed

    private void txtTIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTIdActionPerformed
        try {
            // TODO add your handling code here:
            String tid = txtTId.getText();

            TeacherPaymentDTO teacher = TeacherPaymentsController.searchPayment(new TeacherPaymentDTO(tid));
            TeacherDTO searchteacher = new TeacherDTO();
            searchteacher.setTeId(txtTId.getText());
            TeacherDTO newSearch = TeacherController.searchTeacher(searchteacher);
            txtName.setText(newSearch.getTeName());
            txtTotalDay.requestFocus();
            getEachPayment();
             setTeacherPayment();
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_txtTIdActionPerformed

    private void txtTotalDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalDayActionPerformed
        // TODO add your handling code here:
        btnAdd.doClick();
    }//GEN-LAST:event_txtTotalDayActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            // TODO add your handling code here:
            String pNo = txtPayNomber.getText();
            String tId = txtTId.getText();
            String date = txtDate.getText();
            String nuStudents = txtNuPayment.getText();
            String total = txtTotalDay.getText();
            //String teId, String tPayNo, int noOfStudent, int dayfullAmount, String date) {
            TeacherPaymentDTO teacherpay = new TeacherPaymentDTO(tId, pNo, Integer.parseInt(nuStudents), Integer.parseInt(total), date);
            boolean addPayment = TeacherPaymentsController.addPayment(teacherpay);
            if (addPayment) {
                getEachPayment();
                JOptionPane.showMessageDialog(this, "Payment Adedd SuccessFully.");
            } else {
                JOptionPane.showMessageDialog(this, "Payment Failed..");
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtTId.setText("");
        txtName.setText("");
        txtTotalDay.setText("");
        AutoGenarateID();
        
           
    }//GEN-LAST:event_btnAddActionPerformed

    private void cmbSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubjectItemStateChanged
        
        
        
        try {
            // TODO add your handling code here://run karanna balanna//
            String subject = cmbSubject.getSelectedItem().toString();
            System.out.println("//selected Sub ///"+subject);
            subid = "";
            ArrayList<SubjectDTO> allId = SubjectController.getAllId();
            for (SubjectDTO allSub1 : allId) {
                if (allSub1.getSubName().equals(subject)) {
                    subid = allSub1.getSubId();
                }
            }
            System.out.println("/////  date is  ////"+date1);
            String searchSubPaymnets = StudentPaymentsController.searchSubPaymnets(date1, subid);
            txtNuPayment.setText(searchSubPaymnets);
            
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_cmbSubjectItemStateChanged

    private void txtNuPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNuPaymentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNuPaymentActionPerformed

    private void cmbSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubjectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSubjectActionPerformed

    private void dpDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dpDateActionPerformed
       Date date = dpDate.getDate();
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        date1 = dateFormat.format(date);
        System.out.println(date1);
    }//GEN-LAST:event_dpDateActionPerformed

    private void dpDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dpDateMouseClicked
 
    }//GEN-LAST:event_dpDateMouseClicked

    private void txtPayNomberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPayNomberActionPerformed

    }//GEN-LAST:event_txtPayNomberActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
       
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            // TODO add your handling code here:
            
            String pid = (String) tblTePayment.getValueAt(tblTePayment.getSelectedRow(), 0);
           // String date = (String) tblTePayment.getValueAt(tblTePayment.getSelectedRow(), 4);
            TeacherPaymentDTO tePayments=new TeacherPaymentDTO(pid);
            boolean deletePayment = TeacherPaymentsController.deletePayment(tePayments);
            if (deletePayment) {
                getEachPayment();
                JOptionPane.showMessageDialog(this, "Delete Successfully.");
            } else {
                JOptionPane.showMessageDialog(this, "Delete Failed.");
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          AutoGenarateID();
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbSubject;
    private org.jdesktop.swingx.JXDatePicker dpDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblTePayment;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNuPayment;
    private javax.swing.JTextField txtPayNomber;
    private javax.swing.JTextField txtTId;
    private javax.swing.JTextField txtTotalDay;
    // End of variables declaration//GEN-END:variables

    private void AutoGenarateID() {
        try {
            txtPayNomber.setText(IDGeneretor.getTecherPaymentID("TeacherPayments", "TPay_No", "P"));
        } catch (SQLException ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDate() {
        Date d1 = new Date();
        SimpleDateFormat fdate = new SimpleDateFormat("YYYY-MM-dd");
        String sd = fdate.format(d1);
        txtDate.setText(sd);

    }

    private void getEachPayment() {
        try {
            ArrayList<TeacherPaymentDTO> EachPay = TeacherPaymentsController.getEachPayment(txtTId.getText());
            DefaultTableModel dtm = (DefaultTableModel) tblTePayment.getModel();
           
            if (EachPay != null) {
                for (TeacherPaymentDTO EachPay1 : EachPay) {
                    dtm.addRow(new Object[]{EachPay1.getTeId(), txtName.getText(),EachPay1.getNoOfStudent(), EachPay1.getDayfullAmount(), EachPay1.getDate()});
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAllPayments() {
        try {
            ArrayList<TeacherPaymentDTO> all = TeacherPaymentsController.getAllPayments();
            DefaultTableModel dtm = (DefaultTableModel) tblTePayment.getModel();
            dtm.setRowCount(0);
             ArrayList<TeacherDTO> allId = TeacherController.getAllTeacher();
             
             for(int i=0;i<tblTePayment.getRowCount();i++){
                 TeId=(String) tblTePayment.getValueAt(i, 0);
             }
             for (TeacherDTO allId1 : allId) {
                if(allId1.getTeId().equals(TeId)){
                    name=allId1.getTeName();
                }        
            }
            
            if (all != null) {
                for (TeacherPaymentDTO all1 : all) {
                    dtm.addRow(new Object[]{all1.getTeId(),name,all1.getNoOfStudent(), all1.getDayfullAmount(), all1.getDate()});
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void LoadSubjects() {
        try {
            ArrayList<SubjectDTO> allSub = SubjectController.getAllId();
            cmbSubject.removeAll();
            if (allSub == null) {
                return;
            }
            for (SubjectDTO allSub1 : allSub) {
                cmbSubject.addItem(allSub1.getSubName());
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherPaymentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setTeacherPayment() throws Exception {
        ArrayList<StudentPaymentsDTO> allPayments = StudentPaymentsController.getAllPayments();
        int [] dayPaidDetails = new int[allPayments.size()];
        int count=0;
        for (StudentPaymentsDTO allPayment : allPayments) {
            if (allPayment.getDate().equals(date1)) {
                dayPaidDetails[count] = allPayment.getFee();
                count++;
            }
        }
        int toTeacherPay = 0;
        for (int i = 0; i < dayPaidDetails.length; i++) {
            int tot = (int) (dayPaidDetails[i]*0.25*Integer.parseInt(txtNuPayment.getText()));
            System.out.println("//tot//"+tot);
            toTeacherPay += tot;
        }
        
        txtTotalDay.setText(toTeacherPay+"");
        
    }
}