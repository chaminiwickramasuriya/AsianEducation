/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.sms.view;

import com.ijse.sms.common.IDGeneretor;
import com.ijse.sms.common.validation;
import com.ijse.sms.controller.RegistrationController;
import com.ijse.sms.controller.SubjectController;
import com.ijse.sms.core.dto.ParentDTO;
import com.ijse.sms.core.dto.RegSubjectDTO;
import com.ijse.sms.core.dto.RegistrationDTO;
import com.ijse.sms.core.dto.StudentDTO;
import com.ijse.sms.core.dto.SubjectDTO;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chamini
 */
public class RegistrationForm extends javax.swing.JPanel {

    /**
     * Creates new form RegistrationForm
     */
  //  public static RegistrationForm registrationForm;
    public RegistrationForm() {
        initComponents();
        loadAllSubNames();
        autoGenerateID();
        getAllStudent();
        setDateOn();
        txtName.requestFocus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        lblSDetails = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        lblGender = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        rbFemale = new javax.swing.JRadioButton();
        lblStuId = new javax.swing.JLabel();
        txtStuId = new javax.swing.JTextField();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblAddress = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblSchool = new javax.swing.JLabel();
        txtSchool = new javax.swing.JTextField();
        lblMobile = new javax.swing.JLabel();
        txtMobile = new javax.swing.JTextField();
        lblLand = new javax.swing.JLabel();
        txtLand = new javax.swing.JTextField();
        lblBDay = new javax.swing.JLabel();
        txtBDay = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblAStudent1 = new javax.swing.JLabel();
        lblRId = new javax.swing.JLabel();
        txtRId = new javax.swing.JTextField();
        lblRDate = new javax.swing.JLabel();
        txtRDate = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        lblLevel = new javax.swing.JLabel();
        rbPrimary = new javax.swing.JRadioButton();
        rbOrdinary = new javax.swing.JRadioButton();
        cbRGrade = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbMedium = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        cmbSubject = new javax.swing.JComboBox();
        btnAddSubject = new javax.swing.JButton();
        lblRFee = new javax.swing.JLabel();
        txtRFee = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSubjects = new javax.swing.JTable();
        removetableItem = new javax.swing.JButton();
        btnAAdd = new javax.swing.JButton();
        lblGDetail = new javax.swing.JLabel();
        lblGId = new javax.swing.JLabel();
        txtGID = new javax.swing.JTextField();
        jSeparator5 = new javax.swing.JSeparator();
        lblGName = new javax.swing.JLabel();
        txtGName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtGMobile = new javax.swing.JTextField();
        lblOccupation = new javax.swing.JLabel();
        txtOccupation = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setLayout(null);

        lblSDetails.setBackground(new java.awt.Color(0, 51, 102));
        lblSDetails.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblSDetails.setText("Student Details");
        add(lblSDetails);
        lblSDetails.setBounds(20, 70, 156, 28);

        rbMale.setBackground(new java.awt.Color(0, 87, 106));
        buttonGroup2.add(rbMale);
        rbMale.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        rbMale.setText("Male");
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });
        add(rbMale);
        rbMale.setBounds(120, 320, 100, 27);

        lblGender.setBackground(new java.awt.Color(0, 51, 102));
        lblGender.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGender.setText("Gender");
        add(lblGender);
        lblGender.setBounds(20, 330, 80, 19);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("(YYYY- MM- DD)");
        add(jLabel2);
        jLabel2.setBounds(120, 300, 90, 13);

        rbFemale.setBackground(new java.awt.Color(0, 87, 106));
        buttonGroup2.add(rbFemale);
        rbFemale.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        rbFemale.setText("Female");
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });
        add(rbFemale);
        rbFemale.setBounds(220, 320, 100, 27);

        lblStuId.setBackground(new java.awt.Color(0, 51, 102));
        lblStuId.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblStuId.setText("Student ID");
        add(lblStuId);
        lblStuId.setBounds(240, 80, 100, 19);

        txtStuId.setEditable(false);
        txtStuId.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtStuId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStuIdActionPerformed(evt);
            }
        });
        add(txtStuId);
        txtStuId.setBounds(340, 73, 170, 30);

        lblName.setBackground(new java.awt.Color(0, 51, 102));
        lblName.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblName.setText("Name in Full");
        add(lblName);
        lblName.setBounds(20, 130, 100, 19);

        txtName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNameKeyReleased(evt);
            }
        });
        add(txtName);
        txtName.setBounds(120, 120, 390, 30);

        lblAddress.setBackground(new java.awt.Color(0, 51, 102));
        lblAddress.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblAddress.setText("Address");
        add(lblAddress);
        lblAddress.setBounds(20, 160, 70, 19);

        txtAddress.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });
        txtAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddressKeyReleased(evt);
            }
        });
        add(txtAddress);
        txtAddress.setBounds(120, 157, 390, 30);

        lblSchool.setBackground(new java.awt.Color(0, 51, 102));
        lblSchool.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblSchool.setText("School");
        add(lblSchool);
        lblSchool.setBounds(20, 200, 60, 19);

        txtSchool.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtSchool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSchoolActionPerformed(evt);
            }
        });
        txtSchool.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSchoolKeyReleased(evt);
            }
        });
        add(txtSchool);
        txtSchool.setBounds(120, 193, 390, 30);

        lblMobile.setBackground(new java.awt.Color(0, 51, 102));
        lblMobile.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblMobile.setText("Mobile");
        add(lblMobile);
        lblMobile.setBounds(20, 240, 60, 19);

        txtMobile.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMobileActionPerformed(evt);
            }
        });
        txtMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtMobileKeyReleased(evt);
            }
        });
        add(txtMobile);
        txtMobile.setBounds(120, 233, 160, 30);

        lblLand.setBackground(new java.awt.Color(0, 51, 102));
        lblLand.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblLand.setText("Land");
        add(lblLand);
        lblLand.setBounds(290, 240, 50, 19);

        txtLand.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtLand.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLandActionPerformed(evt);
            }
        });
        txtLand.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtLandKeyReleased(evt);
            }
        });
        add(txtLand);
        txtLand.setBounds(340, 230, 170, 30);

        lblBDay.setBackground(new java.awt.Color(0, 51, 102));
        lblBDay.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblBDay.setText("BirthDay");
        add(lblBDay);
        lblBDay.setBounds(20, 280, 70, 19);

        txtBDay.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtBDay.setToolTipText("use this format.(YYYY-MM-DD)");
        txtBDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBDayActionPerformed(evt);
            }
        });
        txtBDay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBDayKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBDayKeyReleased(evt);
            }
        });
        add(txtBDay);
        txtBDay.setBounds(120, 270, 160, 30);

        lblAge.setBackground(new java.awt.Color(0, 51, 102));
        lblAge.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblAge.setText("Age");
        add(lblAge);
        lblAge.setBounds(290, 280, 50, 19);

        lblAStudent1.setBackground(new java.awt.Color(0, 51, 51));
        lblAStudent1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblAStudent1.setText("Registeration Details");
        add(lblAStudent1);
        lblAStudent1.setBounds(550, 42, 220, 30);

        lblRId.setBackground(new java.awt.Color(0, 51, 102));
        lblRId.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblRId.setText("Register Id");
        add(lblRId);
        lblRId.setBounds(560, 79, 90, 30);

        txtRId.setEditable(false);
        txtRId.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtRId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRIdActionPerformed(evt);
            }
        });
        add(txtRId);
        txtRId.setBounds(660, 80, 150, 30);

        lblRDate.setBackground(new java.awt.Color(0, 51, 102));
        lblRDate.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblRDate.setText("Date");
        add(lblRDate);
        lblRDate.setBounds(850, 90, 50, 20);

        txtRDate.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtRDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRDateActionPerformed(evt);
            }
        });
        add(txtRDate);
        txtRDate.setBounds(910, 83, 150, 30);
        add(jSeparator2);
        jSeparator2.setBounds(560, 120, 530, 2);

        lblLevel.setBackground(new java.awt.Color(0, 51, 102));
        lblLevel.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblLevel.setText("Level");
        add(lblLevel);
        lblLevel.setBounds(560, 140, 50, 19);

        rbPrimary.setBackground(new java.awt.Color(50, 145, 126));
        buttonGroup1.add(rbPrimary);
        rbPrimary.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        rbPrimary.setText("Primay Level");
        add(rbPrimary);
        rbPrimary.setBounds(640, 140, 140, 30);

        rbOrdinary.setBackground(new java.awt.Color(50, 145, 126));
        buttonGroup1.add(rbOrdinary);
        rbOrdinary.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        rbOrdinary.setText("Ordinary Level");
        rbOrdinary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbOrdinaryActionPerformed(evt);
            }
        });
        add(rbOrdinary);
        rbOrdinary.setBounds(790, 140, 140, 27);

        cbRGrade.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbRGrade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Grade 01", "Grade 02", "Grade 03", "Grade 04", "Grade 05", "Grade 06", "Grade 07", "Grade 08", "Grade 09", "Grade 10", "Grade 11" }));
        add(cbRGrade);
        cbRGrade.setBounds(950, 130, 100, 30);

        jLabel3.setBackground(new java.awt.Color(0, 51, 102));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Medium");
        add(jLabel3);
        jLabel3.setBounds(560, 180, 80, 19);

        cmbMedium.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbMedium.setMaximumRowCount(2);
        cmbMedium.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sinhala", "English" }));
        cmbMedium.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbMediumItemStateChanged(evt);
            }
        });
        cmbMedium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMediumActionPerformed(evt);
            }
        });
        add(cmbMedium);
        cmbMedium.setBounds(640, 180, 110, 30);

        jLabel1.setBackground(new java.awt.Color(0, 51, 102));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setText("Subjects");
        add(jLabel1);
        jLabel1.setBounds(760, 179, 70, 30);

        cmbSubject.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbSubject.setMaximumRowCount(2);
        cmbSubject.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbSubjectItemStateChanged(evt);
            }
        });
        cmbSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSubjectActionPerformed(evt);
            }
        });
        add(cmbSubject);
        cmbSubject.setBounds(840, 180, 220, 30);

        btnAddSubject.setBackground(new java.awt.Color(0, 156, 93));
        btnAddSubject.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/add.png"))); // NOI18N
        btnAddSubject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddSubjectActionPerformed(evt);
            }
        });
        add(btnAddSubject);
        btnAddSubject.setBounds(1070, 180, 30, 29);

        lblRFee.setBackground(new java.awt.Color(0, 51, 102));
        lblRFee.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblRFee.setText("Registration Fee");
        add(lblRFee);
        lblRFee.setBounds(560, 219, 120, 30);

        txtRFee.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtRFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRFeeActionPerformed(evt);
            }
        });
        txtRFee.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRFeeKeyReleased(evt);
            }
        });
        add(txtRFee);
        txtRFee.setBounds(690, 220, 110, 30);
        add(jSeparator1);
        jSeparator1.setBounds(10, 110, 500, 2);

        tblSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medium", "Subject"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblSubjects);

        add(jScrollPane2);
        jScrollPane2.setBounds(590, 270, 480, 190);

        removetableItem.setText("Remove From Table");
        removetableItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removetableItemActionPerformed(evt);
            }
        });
        add(removetableItem);
        removetableItem.setBounds(877, 470, 190, 23);

        btnAAdd.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        btnAAdd.setText("Add");
        btnAAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAAddMouseClicked(evt);
            }
        });
        btnAAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAAddActionPerformed(evt);
            }
        });
        add(btnAAdd);
        btnAAdd.setBounds(1010, 550, 80, 30);

        lblGDetail.setBackground(new java.awt.Color(0, 51, 102));
        lblGDetail.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lblGDetail.setText("Gardian Detail");
        add(lblGDetail);
        lblGDetail.setBounds(10, 370, 154, 28);

        lblGId.setBackground(new java.awt.Color(0, 51, 102));
        lblGId.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGId.setText("Gardian ID");
        add(lblGId);
        lblGId.setBounds(10, 410, 100, 19);

        txtGID.setEditable(false);
        txtGID.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGIDActionPerformed(evt);
            }
        });
        add(txtGID);
        txtGID.setBounds(110, 400, 170, 30);
        add(jSeparator5);
        jSeparator5.setBounds(10, 440, 500, 2);

        lblGName.setBackground(new java.awt.Color(0, 51, 102));
        lblGName.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblGName.setText("Gardian Name\n");
        add(lblGName);
        lblGName.setBounds(10, 460, 110, 19);

        txtGName.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGNameActionPerformed(evt);
            }
        });
        txtGName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGNameKeyReleased(evt);
            }
        });
        add(txtGName);
        txtGName.setBounds(130, 460, 400, 30);

        jLabel5.setBackground(new java.awt.Color(0, 51, 102));
        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel5.setText("Mobile Number");
        add(jLabel5);
        jLabel5.setBounds(10, 500, 120, 19);

        txtGMobile.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtGMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGMobileActionPerformed(evt);
            }
        });
        txtGMobile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtGMobileKeyReleased(evt);
            }
        });
        add(txtGMobile);
        txtGMobile.setBounds(130, 500, 300, 30);

        lblOccupation.setBackground(new java.awt.Color(0, 51, 102));
        lblOccupation.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        lblOccupation.setText("Occupation");
        add(lblOccupation);
        lblOccupation.setBounds(10, 540, 90, 19);

        txtOccupation.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtOccupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOccupationActionPerformed(evt);
            }
        });
        txtOccupation.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtOccupationKeyReleased(evt);
            }
        });
        add(txtOccupation);
        txtOccupation.setBounds(130, 540, 300, 30);

        txtAge.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAgeKeyReleased(evt);
            }
        });
        add(txtAge);
        txtAge.setBounds(340, 270, 170, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.png"))); // NOI18N
        add(jLabel6);
        jLabel6.setBounds(0, 0, 1210, 630);
    }// </editor-fold>//GEN-END:initComponents

    private void txtStuIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStuIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStuIdActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
        txtAddress.requestFocus();
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyReleased
        // TODO add your handling code here:
        validation.name(txtName);
    }//GEN-LAST:event_txtNameKeyReleased

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
        txtSchool.requestFocus();
    }//GEN-LAST:event_txtAddressActionPerformed

    private void txtAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddressKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressKeyReleased

    private void txtSchoolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSchoolActionPerformed
        // TODO add your handling code here:
        txtMobile.requestFocus();
    }//GEN-LAST:event_txtSchoolActionPerformed

    private void txtSchoolKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSchoolKeyReleased
        // TODO add your handling code here:
        validation.name(txtSchool);
    }//GEN-LAST:event_txtSchoolKeyReleased

    private void txtMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMobileActionPerformed
        // TODO add your handling code here:

        txtLand.requestFocus();
    }//GEN-LAST:event_txtMobileActionPerformed

    private void txtMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMobileKeyReleased
        validation.phoneNumber(txtMobile, evt);
    }//GEN-LAST:event_txtMobileKeyReleased

    private void txtLandActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLandActionPerformed
        // TODO add your handling code here:

        txtBDay.requestFocus();
    }//GEN-LAST:event_txtLandActionPerformed

    private void txtLandKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLandKeyReleased
        validation.phoneNumber(txtLand, evt);
    }//GEN-LAST:event_txtLandKeyReleased

    private void txtBDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBDayActionPerformed
        // TODO add your handling code here:
        String bday = txtBDay.getText();
        SimpleDateFormat d1 = new SimpleDateFormat("yyyy-MM-dd");
        String[] split = bday.split("-");
        int age = isDate(split[0]);
        txtAge.setText(age + "");
        txtAge.requestFocus();
    }//GEN-LAST:event_txtBDayActionPerformed

    private void txtBDayKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBDayKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBDayKeyPressed

    private void txtBDayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBDayKeyReleased
        // TODO add your handling code here:
        validation.validatebirthDay(txtBDay);
    }//GEN-LAST:event_txtBDayKeyReleased

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMaleActionPerformed

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbFemaleActionPerformed

    private void txtRIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRIdActionPerformed

    private void rbOrdinaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbOrdinaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbOrdinaryActionPerformed

    private void cmbMediumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbMediumItemStateChanged

    }//GEN-LAST:event_cmbMediumItemStateChanged

    private void cmbMediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMediumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbMediumActionPerformed

    private void cmbSubjectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbSubjectItemStateChanged

    }//GEN-LAST:event_cmbSubjectItemStateChanged

    private void cmbSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSubjectActionPerformed
        DefaultTableModel dtm = (DefaultTableModel) tblSubjects.getModel();
        dtm.addRow(new Object[]{cmbMedium.getSelectedItem().toString(), cmbSubject.getSelectedItem().toString()});
    }//GEN-LAST:event_cmbSubjectActionPerformed

    private void btnAddSubjectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddSubjectActionPerformed
        // TODO add your handling code here:
        AddSubjectForm SF = new AddSubjectForm();
        SF.setVisible(true);
        if(SF.isAdded_deleted()){
            loadAllSubNames();
        }
        //loadAllSubNames();
    }//GEN-LAST:event_btnAddSubjectActionPerformed

    private void txtRFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRFeeActionPerformed
        // TODO add your handling code here:
        txtGName.requestFocus();
    }//GEN-LAST:event_txtRFeeActionPerformed

    private void txtRFeeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRFeeKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_txtRFeeKeyReleased

    private void removetableItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removetableItemActionPerformed
        if (tblSubjects.getRowCount() > 0) {
            DefaultTableModel dtt = (DefaultTableModel) tblSubjects.getModel();
            int selectedRow = tblSubjects.getSelectedRow();
            System.out.println(selectedRow);
            dtt.removeRow(selectedRow);
        } else {
            JOptionPane.showMessageDialog(this, "There is no data in table.");
        }

    }//GEN-LAST:event_removetableItemActionPerformed

    private void btnAAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAAddMouseClicked
        // TODO add your handling code here:validation.validatePhoneNumber(txtLand);
    }//GEN-LAST:event_btnAAddMouseClicked

    private void btnAAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAAddActionPerformed
        if (!txtName.getText().equals("")) {
            try {
                String id = txtStuId.getText();
                String pid = txtGID.getText();
                String name = txtName.getText();
                String school = txtSchool.getText();
                String address = txtAddress.getText();
                String gender = "";
                String age = txtAge.getText();
                String mobile = txtMobile.getText();
                String land = txtLand.getText();
                String bday = txtBDay.getText();
                if (rbMale.isSelected()) {
                    gender = rbMale.getText();
                } else {
                    gender = rbFemale.getText();
                }//String id, String pid, String name, String school, String addess, String gender, int age, int mobile, int land, String dob
                System.out.println(id + "-" + "-" + pid + "-" + name + "-" + school + "-" + address + "-" + gender + "-" + age + "-" + mobile + "-" + land + "-" + bday);
                StudentDTO student = new StudentDTO(id, pid, name, school, address, gender, Integer.parseInt(age), Integer.parseInt(mobile), Integer.parseInt(land), bday);

                //Add All Subjects
                String rId = txtRId.getText();
                String subId = "";
                String level = "";
                String medium = cmbMedium.getSelectedItem().toString();
                String Gid = txtGID.getText();
                ArrayList<RegSubjectDTO> allSub = new ArrayList<>();
                if (rbPrimary.isSelected()) {
                    level = rbPrimary.getText();
                } else {
                    level = rbOrdinary.getText();
                }
                for (int i = 0; i < tblSubjects.getRowCount(); i++) {
                    try {
                        String subj = (String) tblSubjects.getValueAt(i, 1);
                        ArrayList<SubjectDTO> allId = SubjectController.getAllId();
                        for (SubjectDTO allIds : allId) {
                            if (allIds.getSubName().equals(subj)) {
                                subId = allIds.getSubId();
                            }
                        }
                        //public RegSubjectDTO(String RSid, String Subid, String RSLevel, String Medium) {
                        allSub.add(new RegSubjectDTO(rId, subId, level, medium));
                    } catch (Exception ex) {
                        Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                //Add Parent

                String GName = txtGName.getText();
                String GMobile = txtGMobile.getText();
                String occupation = txtOccupation.getText();

                ParentDTO parent = new ParentDTO(Gid, GName, GMobile, occupation);
                //Add Registration
                String rid = txtRId.getText();
                String stId = txtStuId.getText();
                String fee = txtRFee.getText();
                String grade = cbRGrade.getSelectedItem().toString();
                String date = txtRDate.getText();

                RegistrationDTO registration = new RegistrationDTO(rid, stId, fee, grade, date);

                boolean addRegistration = RegistrationController.addRegistration(parent, student, allSub, registration);
                if (addRegistration) {
                    autoGenerateID();
                    JOptionPane.showMessageDialog(this, "Registration Successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Please Register Correctly.Try Again.");
                }

            } catch (Exception ex) {
                Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }

        txtAddress.setText("");
        txtAge.setText("");
        txtBDay.setText("");
        txtGMobile.setText("");
        txtGName.setText("");
        txtLand.setText("");
        txtMobile.setText("");
        txtName.setText("");
        txtOccupation.setText("");
        txtSchool.setText("");
        rbFemale.setSelected(false);
        rbMale.setSelected(false);
        rbOrdinary.setSelected(false);
        rbPrimary.setSelected(false);
        getAllStudent();
    }//GEN-LAST:event_btnAAddActionPerformed

    private void txtGIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGIDActionPerformed
        // TODO add your handling code here:
        txtGName.requestFocus();
    }//GEN-LAST:event_txtGIDActionPerformed

    private void txtGNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGNameActionPerformed
        // TODO add your handling code here:
        txtGMobile.requestFocus();
    }//GEN-LAST:event_txtGNameActionPerformed

    private void txtGNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGNameKeyReleased
        // TODO add your handling code here:
        validation.name(txtGName);
    }//GEN-LAST:event_txtGNameKeyReleased

    private void txtGMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGMobileActionPerformed
        // TODO add your handling code here:
        txtOccupation.requestFocus();
    }//GEN-LAST:event_txtGMobileActionPerformed

    private void txtGMobileKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtGMobileKeyReleased
        // TODO add your handling code here:  
        validation.phoneNumber(txtGMobile, evt);
    }//GEN-LAST:event_txtGMobileKeyReleased

    private void txtOccupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOccupationActionPerformed
        // TODO add your handling code here:
        btnAAdd.doClick();
    }//GEN-LAST:event_txtOccupationActionPerformed

    private void txtOccupationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOccupationKeyReleased
        // TODO add your handling code here:
        validation.name(txtOccupation);
    }//GEN-LAST:event_txtOccupationKeyReleased

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void txtAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeKeyReleased

    private void txtRDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRDateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAAdd;
    private javax.swing.JButton btnAddSubject;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox cbRGrade;
    private javax.swing.JComboBox cmbMedium;
    private javax.swing.JComboBox cmbSubject;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JLabel lblAStudent1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblBDay;
    private javax.swing.JLabel lblGDetail;
    private javax.swing.JLabel lblGId;
    private javax.swing.JLabel lblGName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblLand;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblMobile;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblOccupation;
    private javax.swing.JLabel lblRDate;
    private javax.swing.JLabel lblRFee;
    private javax.swing.JLabel lblRId;
    private javax.swing.JLabel lblSDetails;
    private javax.swing.JLabel lblSchool;
    private javax.swing.JLabel lblStuId;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JRadioButton rbOrdinary;
    private javax.swing.JRadioButton rbPrimary;
    private javax.swing.JButton removetableItem;
    private javax.swing.JTable tblSubjects;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtBDay;
    private javax.swing.JTextField txtGID;
    private javax.swing.JTextField txtGMobile;
    private javax.swing.JTextField txtGName;
    private javax.swing.JTextField txtLand;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtOccupation;
    private javax.swing.JTextField txtRDate;
    private javax.swing.JTextField txtRFee;
    private javax.swing.JTextField txtRId;
    private javax.swing.JTextField txtSchool;
    private javax.swing.JTextField txtStuId;
    // End of variables declaration//GEN-END:variables

    private void setDateOn() {
        Date d1 = new Date();
        SimpleDateFormat fdate = new SimpleDateFormat("YYYY-MM-dd");
        String sd = fdate.format(d1);
        txtRDate.setText(sd);
    }

    private int isDate(String bday) {
        Calendar bdate = Calendar.getInstance();
        bdate.set(Calendar.YEAR, Integer.parseInt(bday));
        Calendar CDate = Calendar.getInstance();
        CDate.setTime(new Date());
        System.out.println("today : " + CDate.get(Calendar.YEAR));
        System.out.println("bday : " + bdate.get(Calendar.YEAR));
        return CDate.get(Calendar.YEAR) - bdate.get(Calendar.YEAR);
    }

    public void loadAllSubNames() {
        try {
            ArrayList<SubjectDTO> SubName = SubjectController.getAllId();
            cmbSubject.removeAllItems();
            if (SubName != null) {

                for (SubjectDTO subNames : SubName) {

                    cmbSubject.addItem(subNames.getSubName());

                }
            }

        } catch (Exception ex) {
            Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void autoGenerateID() {
        try {
            txtStuId.setText(IDGeneretor.getStudentID("Student", "Stu_Id", "St"));
            txtRId.setText(IDGeneretor.getRegistrationID("Registration", "Reg_Id", "R"));
            txtGID.setText(IDGeneretor.getGardianID("Parent", "Pr_Id", "Pr"));
        } catch (SQLException ex) {
            Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void getAllStudent() {
        DefaultTableModel dtm = (DefaultTableModel) tblSubjects.getModel();
        dtm.setRowCount(0);
    }

}
