/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ijse.sms.view;

import com.ijse.sms.controller.ImageController;
import com.ijse.sms.controller.TeacherController;
import com.ijse.sms.controller.TeacherDetailController;
import com.ijse.sms.core.dto.ImageDTO;
import com.ijse.sms.core.dto.TeacherDTO;
import com.ijse.sms.core.dto.TeacherDetailDTO;
import com.ijse.sms.dao.db.DBConnection;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chamini
 */
public class TeacherDetailsForm extends javax.swing.JFrame {

    /**
     * Creates new form TeacherDetailsForm
     */
    public TeacherDetailsForm() {
        initComponents();
        setLocationRelativeTo(null);
        btnGetImage.setEnabled(false);
        btnSaveImage.setEnabled(false);
        txtimgID.setEditable(false);
        lblImagePath.setEnabled(false);
        searchTeacher();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtimgID = new javax.swing.JTextField();
        btnGetImage = new javax.swing.JButton();
        labelSaveImg = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblImagePath = new javax.swing.JLabel();
        btnSaveImage = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        lblImg = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        cmbTeacher = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTech = new javax.swing.JTable();
        txtMobile = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSubject = new javax.swing.JTextField();
        txtiTid = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel3.setText("Image ID");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(660, 180, 90, 20);
        jPanel1.add(txtimgID);
        txtimgID.setBounds(780, 170, 190, 30);

        btnGetImage.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnGetImage.setText("Get Image");
        btnGetImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGetImageActionPerformed(evt);
            }
        });
        jPanel1.add(btnGetImage);
        btnGetImage.setBounds(640, 220, 110, 30);

        labelSaveImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(labelSaveImg);
        labelSaveImg.setBounds(780, 210, 190, 170);

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("Image Path :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(640, 420, 90, 30);
        jPanel1.add(lblImagePath);
        lblImagePath.setBounds(740, 420, 290, 30);

        btnSaveImage.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        btnSaveImage.setText("Save in Database");
        btnSaveImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveImageActionPerformed(evt);
            }
        });
        jPanel1.add(btnSaveImage);
        btnSaveImage.setBounds(830, 470, 160, 40);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        jLabel5.setText("Save Image In Database");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel5);
        jLabel5.setBounds(710, 110, 220, 30);

        lblImg.setBackground(new java.awt.Color(0, 51, 51));
        lblImg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblImg);
        lblImg.setBounds(30, 90, 190, 180);

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        jPanel1.add(btnView);
        btnView.setBounds(400, 40, 90, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/power.png"))); // NOI18N
        jLabel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel6MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel6);
        jLabel6.setBounds(1004, 10, 30, 30);

        cmbTeacher.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cmbTeacher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTeacherActionPerformed(evt);
            }
        });
        jPanel1.add(cmbTeacher);
        cmbTeacher.setBounds(30, 40, 260, 30);

        tblTech.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblTech.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Grade", "DayOfMonth", "TimePeriod"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblTech);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(40, 310, 510, 190);

        txtMobile.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(txtMobile);
        txtMobile.setBounds(360, 220, 190, 30);

        txtId.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        jPanel1.add(txtId);
        txtId.setBounds(360, 100, 190, 30);

        txtName.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(txtName);
        txtName.setBounds(360, 140, 190, 30);

        txtSubject.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jPanel1.add(txtSubject);
        txtSubject.setBounds(360, 180, 190, 30);
        jPanel1.add(txtiTid);
        txtiTid.setBounds(300, 40, 90, 30);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/background.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 1050, 530);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1048, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGetImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGetImageActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
            lblImagePath.setText(selectedFile.getAbsolutePath());

            ImageIcon image = new ImageIcon(selectedFile.getAbsolutePath());
            Image im = image.getImage();
            Image myImg = im.getScaledInstance(labelSaveImg.getWidth(), labelSaveImg.getHeight(), Image.SCALE_SMOOTH);
            ImageIcon newImage = new ImageIcon(myImg);
            labelSaveImg.setIcon(newImage);

        }
    }//GEN-LAST:event_btnGetImageActionPerformed

    private void btnSaveImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveImageActionPerformed
        try {

            Connection connection = DBConnection.geBConnection().getConnection();
            File file = new File(lblImagePath.getText());
            FileInputStream fis = new FileInputStream(file);

            PreparedStatement ps = connection.prepareStatement("insert into Image (id,image) values(?,?)");
            ps.setString(1, txtimgID.getText());
            ps.setBinaryStream(2, (InputStream) fis, (int) file.length());

            if (ps.executeUpdate() > 0) {
                System.out.println("aaaaaaa");
                JOptionPane.showMessageDialog(this, "Saved Sucessfully.");
            } else {
                JOptionPane.showMessageDialog(this, "saved Failed..");
            }

            ps.close();
            fis.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnSaveImageActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        try {
            Connection connection = DBConnection.geBConnection().getConnection();
            Statement st = connection.createStatement();
            ResultSet rs = st.executeQuery("select * from Image where id = '" + txtiTid.getText() + "'");
            if (rs.next()) {
                byte[] img = rs.getBytes("image");
                //Resize The ImageIcon
                ImageIcon image = new ImageIcon(img);
                Image im = image.getImage();
                Image myImg = im.getScaledInstance(lblImg.getWidth(), lblImg.getHeight(), Image.SCALE_SMOOTH);
                ImageIcon newImage = new ImageIcon(myImg);
                lblImg.setIcon(newImage);
                
                String name = cmbTeacher.getSelectedItem().toString();
                TeacherDTO searchAllTeacher = TeacherController.searchAllTeacher(new TeacherDTO(name));
                txtId.setText(searchAllTeacher.getTeId());
                txtName.setText(searchAllTeacher.getTeName());
                txtSubject.setText(searchAllTeacher.getSub_Name());
                txtMobile.setText(searchAllTeacher.getTeMobile() + "");
                
                ArrayList<TeacherDetailDTO> all = TeacherDetailController.eachSubjet(txtId.getText());
                DefaultTableModel dtm = (DefaultTableModel) tblTech.getModel();
                dtm.setRowCount(0);
                for (TeacherDetailDTO all1 : all) {
                    dtm.addRow(new Object[]{all1.getTeId(),all1.getGrade(),all1.getDayOfMonth(),all1.getTime()});
                }
            } else {
                JOptionPane.showMessageDialog(null, "No Data");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void jLabel6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel6MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel6MouseClicked

    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        btnGetImage.setEnabled(true);
        btnSaveImage.setEnabled(true);
        txtimgID.setEditable(true);
        lblImagePath.setEnabled(true);
    }//GEN-LAST:event_jLabel5MouseClicked

    private void cmbTeacherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTeacherActionPerformed
        try {
            // TODO add your handling code here:
            String name = cmbTeacher.getSelectedItem().toString();
            String searchId = TeacherController.searchId(name);
            txtiTid.setText(searchId);
        } catch (Exception ex) {
            Logger.getLogger(TeacherDetailsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cmbTeacherActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TeacherDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TeacherDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TeacherDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TeacherDetailsForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TeacherDetailsForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGetImage;
    private javax.swing.JButton btnSaveImage;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cmbTeacher;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelSaveImg;
    private javax.swing.JLabel lblImagePath;
    private javax.swing.JLabel lblImg;
    private javax.swing.JTable tblTech;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMobile;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSubject;
    private javax.swing.JTextField txtiTid;
    private javax.swing.JTextField txtimgID;
    // End of variables declaration//GEN-END:variables

    private void searchTeacher() {
        try {
            ArrayList<TeacherDTO> allTeacher = TeacherController.getAllTeacher();
            cmbTeacher.removeAll();
            if (allTeacher == null) {
                return;
            }
            for (TeacherDTO allTeacher1 : allTeacher) {
                cmbTeacher.addItem(allTeacher1.getTeName());
            }
        } catch (Exception ex) {
            Logger.getLogger(TeacherDetailsForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
